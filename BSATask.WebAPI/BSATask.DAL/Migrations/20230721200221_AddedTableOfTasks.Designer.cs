// <auto-generated />
using System;
using BSATask.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BSATask.DAL.Migrations
{
    [DbContext(typeof(BSATaskContext))]
    [Migration("20230721200221_AddedTableOfTasks")]
    partial class AddedTableOfTasks
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BSATask.DAL.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.HasIndex("UserId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2023, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Create an ASP.NET Core Web API application using one of the following architectures: REST API (controllers/services) or CQRS",
                            Name = "ProjectStructure",
                            TeamId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2023, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Appreciative deputy, director of Parking, bazhaє to automate the routine processes of his business, through which, turning to you for help. Also, you need to create a simple program for curation",
                            Name = "NET Ecosystem 2023",
                            TeamId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2023, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The main idea of the project is to get to know our details of how we can look like a real project, learn about how the architecture of the project is mastered, marvel at the possible configuration, try to dig into someone else's code.",
                            Name = "Thread",
                            TeamId = 3,
                            UserId = 4
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deadline = new DateTime(2023, 8, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Make it look like twitter",
                            Name = "Twitter",
                            TeamId = 4,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("BSATask.DAL.Entities.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FinishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Blame it on 3 to 5 elements in skin daytime at the start of the zastosunku",
                            Name = "Create three to five models",
                            ProjectId = 1,
                            State = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Models that rotate with CRUD endpoints have the same structure as Swagger's front home (you can't change field names or you can see them instead);",
                            Name = "Implement models from past homework",
                            ProjectId = 1,
                            State = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "For work with danim, it’s better to win one of the patterns, as they were looked at during the lecture (Repository, UnitOfWork)",
                            Name = "Implementation of Repository or UnitOfWork",
                            ProjectId = 2,
                            State = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Be kind, create a new repository on Bitbucket, and do not continue to work with the existing one",
                            Name = "Created repository",
                            ProjectId = 2,
                            State = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The creations of the project are responsible for the name BSATask.WebAPI",
                            Name = "Created project",
                            ProjectId = 3,
                            State = 1,
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Guess about such words, like DTO and DI",
                            Name = "Implementation of DTO and DI",
                            ProjectId = 3,
                            State = 1,
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The console client is responsible for the upgrades to work with the server via HTTP",
                            Name = "Modernization UI",
                            ProjectId = 4,
                            State = 1,
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "In the right solution (it is possible in a real repository) create a WebAPI project based on .NET 6",
                            Name = "Created WEBAPI project",
                            ProjectId = 4,
                            State = 0,
                            UserId = 8
                        });
                });

            modelBuilder.Entity("BSATask.DAL.Entities.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "HeadWorks"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BinaryStudio"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2021, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Epam"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2019, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "AltexSoft"
                        });
                });

            modelBuilder.Entity("BSATask.DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDay = new DateTime(1994, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "che.al@ukr.net",
                            FirstName = "Kevin",
                            LastName = "Taylor",
                            RegisteredAt = new DateTime(2022, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeamId = 1
                        },
                        new
                        {
                            Id = 2,
                            BirthDay = new DateTime(1987, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "shevneva787@gmail.com",
                            FirstName = "Sophie",
                            LastName = "Harris",
                            RegisteredAt = new DateTime(2021, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeamId = 2
                        },
                        new
                        {
                            Id = 3,
                            BirthDay = new DateTime(1988, 11, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "aslanov@gmail.com",
                            FirstName = "Lily",
                            LastName = "Lewis",
                            RegisteredAt = new DateTime(2020, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeamId = 3
                        },
                        new
                        {
                            Id = 4,
                            BirthDay = new DateTime(1992, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nicols@gmail.com",
                            FirstName = "Grace",
                            LastName = "King",
                            RegisteredAt = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeamId = 4
                        },
                        new
                        {
                            Id = 5,
                            BirthDay = new DateTime(1995, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jack@gmail.com",
                            FirstName = "Scarlett",
                            LastName = "Young",
                            RegisteredAt = new DateTime(2019, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeamId = 1
                        },
                        new
                        {
                            Id = 6,
                            BirthDay = new DateTime(1996, 8, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "biden@ukr.net",
                            FirstName = "Ellie",
                            LastName = "Moore",
                            RegisteredAt = new DateTime(2022, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeamId = 2
                        },
                        new
                        {
                            Id = 7,
                            BirthDay = new DateTime(1990, 7, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "llll@ukr.net",
                            FirstName = "Paige",
                            LastName = "Walker",
                            RegisteredAt = new DateTime(2021, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeamId = 3
                        },
                        new
                        {
                            Id = 8,
                            BirthDay = new DateTime(1998, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lok@ukr.net",
                            FirstName = "Maddison",
                            LastName = "Smith",
                            RegisteredAt = new DateTime(2022, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeamId = 1
                        });
                });

            modelBuilder.Entity("BSATask.DAL.Entities.Project", b =>
                {
                    b.HasOne("BSATask.DAL.Entities.Team", "Team")
                        .WithMany("Projects")
                        .HasForeignKey("TeamId");

                    b.HasOne("BSATask.DAL.Entities.User", "User")
                        .WithMany("Projects")
                        .HasForeignKey("UserId");

                    b.Navigation("Team");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BSATask.DAL.Entities.Task", b =>
                {
                    b.HasOne("BSATask.DAL.Entities.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BSATask.DAL.Entities.User", "User")
                        .WithMany("Tasks")
                        .HasForeignKey("UserId");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BSATask.DAL.Entities.User", b =>
                {
                    b.HasOne("BSATask.DAL.Entities.Team", "Team")
                        .WithMany("Users")
                        .HasForeignKey("TeamId");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("BSATask.DAL.Entities.Project", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("BSATask.DAL.Entities.Team", b =>
                {
                    b.Navigation("Projects");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("BSATask.DAL.Entities.User", b =>
                {
                    b.Navigation("Projects");

                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
